-- ======================================================================
-- V1__init_app_chema.sql
-- Схема БД для сервиса тестирования интеграций
-- Назначение: справочники, сущности "проверки", их профили и результаты
-- Политика удаления:
--   - h_check_* (профили) удаляются каскадно при удалении проверки
--   - h_check_result сохраняется (FK SET NULL), чтобы не терять историю
-- ======================================================================

-- ---------------------------------------------------------------------
-- Создание отдельной схемы для объектов сервиса тестирования интеграций
-- ---------------------------------------------------------------------
CREATE SCHEMA IF NOT EXISTS ${app_schema};
COMMENT ON SCHEMA ${app_schema} IS 'Схема объектов сервиса тестирования интеграций: проверки, их профили и история запусков';

-- -----------------------------
-- Бизнес-сущность: Проверка
-- -----------------------------
CREATE TABLE IF NOT EXISTS ${app_schema}.h_check
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name             VARCHAR(250) NOT NULL,
    description      VARCHAR(1000),
    is_enabled  BOOLEAN   NOT NULL DEFAULT FALSE,
    run_interval_min INTEGER      NOT NULL,
    next_run_at TIMESTAMP NOT NULL DEFAULT NOW(),
    type_code        TEXT         NOT NULL,

    CONSTRAINT pk_h_check PRIMARY KEY (id),
    CONSTRAINT uq_h_check__name UNIQUE (name),
    CONSTRAINT ck_h_check__interval_range CHECK (run_interval_min BETWEEN 1 AND 10080)
);
COMMENT ON TABLE ${app_schema}.h_check IS 'Проверки (задачи планировщика)';
COMMENT ON COLUMN ${app_schema}.h_check.id IS 'Идентификатор проверки (PK)';
COMMENT ON COLUMN ${app_schema}.h_check.name IS 'Уникальное имя проверки';
COMMENT ON COLUMN ${app_schema}.h_check.description IS 'Описание проверки';
COMMENT ON COLUMN ${app_schema}.h_check.is_enabled IS 'Признак активности в планировщике';
COMMENT ON COLUMN ${app_schema}.h_check.run_interval_min IS 'Периодичность запусков, мин (1–10080)';
COMMENT ON COLUMN ${app_schema}.h_check.next_run_at IS 'Время следующего запуска';
COMMENT ON COLUMN ${app_schema}.h_check.type_code IS 'Код типа проверки';

-- Индекс для планировщика: "просроченные" и ближайшие проверки
CREATE INDEX IF NOT EXISTS ix_h_check__due
    ON ${app_schema}.h_check (next_run_at)
    WHERE is_enabled IS TRUE;
COMMENT ON INDEX ${app_schema}.ix_h_check__due IS 'Выборка просроченных и ближайших запусков для активных проверок (is_enabled=TRUE)';

-- ----------------------------------
-- Параметры для URL/HTTP-проверок
-- ----------------------------------
CREATE TABLE IF NOT EXISTS ${app_schema}.h_check_rest_api
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY,
    check_id         BIGINT  NOT NULL,
    url              TEXT    NOT NULL,
    http_method_code TEXT    NOT NULL,
    timeout_seconds  INTEGER NOT NULL DEFAULT 30,
    headers JSONB,
    request_body     TEXT,

    CONSTRAINT pk_h_check_rest_api PRIMARY KEY (id),
    CONSTRAINT fk_h_check_rest_api__check FOREIGN KEY (check_id) REFERENCES ${app_schema}.h_check (id) ON DELETE CASCADE,
    CONSTRAINT ck_h_check_rest_api__headers_is_object CHECK (headers IS NULL OR jsonb_typeof(headers) = 'object'),
    CONSTRAINT ck_h_check_rest_api__timeout_range CHECK (timeout_seconds BETWEEN 1 AND 600)
);
COMMENT ON TABLE ${app_schema}.h_check_rest_api IS 'Профиль REST API для проверки';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.id IS 'Идентификатор профиля REST API (PK)';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.check_id IS 'Проверка, к которой относится профиль (FK h_check.id, ON DELETE CASCADE)';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.url IS 'Целевой URL';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.http_method_code IS 'HTTP-метод';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.timeout_seconds IS 'Тайм-аут HTTP-запроса, сек (1–600)';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.headers IS 'Заголовки запроса';
COMMENT ON COLUMN ${app_schema}.h_check_rest_api.request_body IS 'Шаблон тела запроса';

CREATE INDEX IF NOT EXISTS ix_h_check_rest_api__check_id
    ON ${app_schema}.h_check_rest_api (check_id);
COMMENT ON INDEX ${app_schema}.ix_h_check_rest_api__check_id IS 'Поиск профилей по проверке';

-- ------------------------------
-- Результаты запусков проверок
-- ------------------------------
CREATE TABLE IF NOT EXISTS ${app_schema}.h_check_result
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY,
    check_id    BIGINT,
    started_at  TIMESTAMP NOT NULL,
    status_code TEXT      NOT NULL,
    details     JSONB,
    error_code       VARCHAR(100),
    error_message    TEXT,

    CONSTRAINT pk_h_check_result PRIMARY KEY (id),
    CONSTRAINT ck_h_check_result__details_is_object CHECK (details IS NULL OR jsonb_typeof(details) = 'object'),
    CONSTRAINT fk_h_check_result__check FOREIGN KEY (check_id) REFERENCES ${app_schema}.h_check (id) ON DELETE SET NULL
);
COMMENT ON TABLE ${app_schema}.h_check_result IS 'История запусков проверок';
COMMENT ON COLUMN ${app_schema}.h_check_result.id IS 'Идентификатор результата запуска (PK)';
COMMENT ON COLUMN ${app_schema}.h_check_result.check_id IS 'FK на проверку; NULL — общесистемные события';
COMMENT ON COLUMN ${app_schema}.h_check_result.started_at IS 'Время начала выполнения';
COMMENT ON COLUMN ${app_schema}.h_check_result.status_code IS 'Код статуса выполнения';
COMMENT ON COLUMN ${app_schema}.h_check_result.details IS 'Доп. сведения об исполнении/ответе';
COMMENT ON COLUMN ${app_schema}.h_check_result.error_code IS 'Код ошибки/исключения (если было)';
COMMENT ON COLUMN ${app_schema}.h_check_result.error_message IS 'Краткое описание ошибки (если было)';

CREATE INDEX IF NOT EXISTS ix_h_check_result__status_code
    ON ${app_schema}.h_check_result (status_code);
COMMENT ON INDEX ${app_schema}.ix_h_check_result__status_code IS 'Поиск результатов по коду статуса';

CREATE INDEX IF NOT EXISTS ix_h_check_result__check_id
    ON ${app_schema}.h_check_result (check_id);
COMMENT ON INDEX ${app_schema}.ix_h_check_result__check_id IS 'Быстрый доступ к истории запусков конкретной проверки';